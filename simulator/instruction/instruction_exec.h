/*
 * This file is autogenerated by 'generate.py' script from risc-v.yaml file
 * Do not try to change anything in this file
 ***********************************************************
 * Written by Glaz Roman (Vokerlee)
*/

#ifndef SIMULATOR_INSTRUCTION_EXEC_INSTRUCTION_EXEC_H
#define SIMULATOR_INSTRUCTION_EXEC_INSTRUCTION_EXEC_H

#include "hart/hart.h"
#include "instruction.h"

namespace rvsim {

void exec_BEQ        (Hart &hart, const Instruction &instr);
void exec_BNE        (Hart &hart, const Instruction &instr);
void exec_BLT        (Hart &hart, const Instruction &instr);
void exec_BGE        (Hart &hart, const Instruction &instr);
void exec_BLTU       (Hart &hart, const Instruction &instr);
void exec_BGEU       (Hart &hart, const Instruction &instr);
void exec_JALR       (Hart &hart, const Instruction &instr);
void exec_JAL        (Hart &hart, const Instruction &instr);
void exec_LUI        (Hart &hart, const Instruction &instr);
void exec_AUIPC      (Hart &hart, const Instruction &instr);
void exec_ADDI       (Hart &hart, const Instruction &instr);
void exec_SLLI       (Hart &hart, const Instruction &instr);
void exec_SLTI       (Hart &hart, const Instruction &instr);
void exec_SLTIU      (Hart &hart, const Instruction &instr);
void exec_XORI       (Hart &hart, const Instruction &instr);
void exec_SRLI       (Hart &hart, const Instruction &instr);
void exec_SRAI       (Hart &hart, const Instruction &instr);
void exec_ORI        (Hart &hart, const Instruction &instr);
void exec_ANDI       (Hart &hart, const Instruction &instr);
void exec_ADD        (Hart &hart, const Instruction &instr);
void exec_SUB        (Hart &hart, const Instruction &instr);
void exec_SLL        (Hart &hart, const Instruction &instr);
void exec_SLT        (Hart &hart, const Instruction &instr);
void exec_SLTU       (Hart &hart, const Instruction &instr);
void exec_XOR        (Hart &hart, const Instruction &instr);
void exec_SRL        (Hart &hart, const Instruction &instr);
void exec_SRA        (Hart &hart, const Instruction &instr);
void exec_OR         (Hart &hart, const Instruction &instr);
void exec_AND        (Hart &hart, const Instruction &instr);
void exec_ADDIW      (Hart &hart, const Instruction &instr);
void exec_SLLIW      (Hart &hart, const Instruction &instr);
void exec_SRLIW      (Hart &hart, const Instruction &instr);
void exec_SRAIW      (Hart &hart, const Instruction &instr);
void exec_ADDW       (Hart &hart, const Instruction &instr);
void exec_SUBW       (Hart &hart, const Instruction &instr);
void exec_SLLW       (Hart &hart, const Instruction &instr);
void exec_SRLW       (Hart &hart, const Instruction &instr);
void exec_SRAW       (Hart &hart, const Instruction &instr);
void exec_LB         (Hart &hart, const Instruction &instr);
void exec_LH         (Hart &hart, const Instruction &instr);
void exec_LW         (Hart &hart, const Instruction &instr);
void exec_LD         (Hart &hart, const Instruction &instr);
void exec_LBU        (Hart &hart, const Instruction &instr);
void exec_LHU        (Hart &hart, const Instruction &instr);
void exec_LWU        (Hart &hart, const Instruction &instr);
void exec_SB         (Hart &hart, const Instruction &instr);
void exec_SH         (Hart &hart, const Instruction &instr);
void exec_SW         (Hart &hart, const Instruction &instr);
void exec_SD         (Hart &hart, const Instruction &instr);
void exec_FENCE      (Hart &hart, const Instruction &instr);
void exec_FENCE_I    (Hart &hart, const Instruction &instr);
void exec_MUL        (Hart &hart, const Instruction &instr);
void exec_MULH       (Hart &hart, const Instruction &instr);
void exec_MULHSU     (Hart &hart, const Instruction &instr);
void exec_MULHU      (Hart &hart, const Instruction &instr);
void exec_DIV        (Hart &hart, const Instruction &instr);
void exec_DIVU       (Hart &hart, const Instruction &instr);
void exec_REM        (Hart &hart, const Instruction &instr);
void exec_REMU       (Hart &hart, const Instruction &instr);
void exec_MULW       (Hart &hart, const Instruction &instr);
void exec_DIVW       (Hart &hart, const Instruction &instr);
void exec_DIVUW      (Hart &hart, const Instruction &instr);
void exec_REMW       (Hart &hart, const Instruction &instr);
void exec_REMUW      (Hart &hart, const Instruction &instr);
void exec_AMOADD_W   (Hart &hart, const Instruction &instr);
void exec_AMOXOR_W   (Hart &hart, const Instruction &instr);
void exec_AMOOR_W    (Hart &hart, const Instruction &instr);
void exec_AMOAND_W   (Hart &hart, const Instruction &instr);
void exec_AMOMIN_W   (Hart &hart, const Instruction &instr);
void exec_AMOMAX_W   (Hart &hart, const Instruction &instr);
void exec_AMOMINU_W  (Hart &hart, const Instruction &instr);
void exec_AMOMAXU_W  (Hart &hart, const Instruction &instr);
void exec_AMOSWAP_W  (Hart &hart, const Instruction &instr);
void exec_LR_W       (Hart &hart, const Instruction &instr);
void exec_SC_W       (Hart &hart, const Instruction &instr);
void exec_AMOADD_D   (Hart &hart, const Instruction &instr);
void exec_AMOXOR_D   (Hart &hart, const Instruction &instr);
void exec_AMOOR_D    (Hart &hart, const Instruction &instr);
void exec_AMOAND_D   (Hart &hart, const Instruction &instr);
void exec_AMOMIN_D   (Hart &hart, const Instruction &instr);
void exec_AMOMAX_D   (Hart &hart, const Instruction &instr);
void exec_AMOMINU_D  (Hart &hart, const Instruction &instr);
void exec_AMOMAXU_D  (Hart &hart, const Instruction &instr);
void exec_AMOSWAP_D  (Hart &hart, const Instruction &instr);
void exec_LR_D       (Hart &hart, const Instruction &instr);
void exec_SC_D       (Hart &hart, const Instruction &instr);
void exec_ECALL      (Hart &hart, const Instruction &instr);
void exec_EBREAK     (Hart &hart, const Instruction &instr);
void exec_URET       (Hart &hart, const Instruction &instr);
void exec_SRET       (Hart &hart, const Instruction &instr);
void exec_MRET       (Hart &hart, const Instruction &instr);
void exec_DRET       (Hart &hart, const Instruction &instr);
void exec_SFENCE_VMA (Hart &hart, const Instruction &instr);
void exec_WFI        (Hart &hart, const Instruction &instr);
void exec_CSRRW      (Hart &hart, const Instruction &instr);
void exec_CSRRS      (Hart &hart, const Instruction &instr);
void exec_CSRRC      (Hart &hart, const Instruction &instr);
void exec_CSRRWI     (Hart &hart, const Instruction &instr);
void exec_CSRRSI     (Hart &hart, const Instruction &instr);
void exec_CSRRCI     (Hart &hart, const Instruction &instr);
void exec_HFENCE_VVMA(Hart &hart, const Instruction &instr);
void exec_HFENCE_GVMA(Hart &hart, const Instruction &instr);
void exec_FADD_S     (Hart &hart, const Instruction &instr);
void exec_FSUB_S     (Hart &hart, const Instruction &instr);
void exec_FMUL_S     (Hart &hart, const Instruction &instr);
void exec_FDIV_S     (Hart &hart, const Instruction &instr);
void exec_FSGNJ_S    (Hart &hart, const Instruction &instr);
void exec_FSGNJN_S   (Hart &hart, const Instruction &instr);
void exec_FSGNJX_S   (Hart &hart, const Instruction &instr);
void exec_FMIN_S     (Hart &hart, const Instruction &instr);
void exec_FMAX_S     (Hart &hart, const Instruction &instr);
void exec_FSQRT_S    (Hart &hart, const Instruction &instr);
void exec_FADD_D     (Hart &hart, const Instruction &instr);
void exec_FSUB_D     (Hart &hart, const Instruction &instr);
void exec_FMUL_D     (Hart &hart, const Instruction &instr);
void exec_FDIV_D     (Hart &hart, const Instruction &instr);
void exec_FSGNJ_D    (Hart &hart, const Instruction &instr);
void exec_FSGNJN_D   (Hart &hart, const Instruction &instr);
void exec_FSGNJX_D   (Hart &hart, const Instruction &instr);
void exec_FMIN_D     (Hart &hart, const Instruction &instr);
void exec_FMAX_D     (Hart &hart, const Instruction &instr);
void exec_FCVT_S_D   (Hart &hart, const Instruction &instr);
void exec_FCVT_D_S   (Hart &hart, const Instruction &instr);
void exec_FSQRT_D    (Hart &hart, const Instruction &instr);
void exec_FADD_Q     (Hart &hart, const Instruction &instr);
void exec_FSUB_Q     (Hart &hart, const Instruction &instr);
void exec_FMUL_Q     (Hart &hart, const Instruction &instr);
void exec_FDIV_Q     (Hart &hart, const Instruction &instr);
void exec_FSGNJ_Q    (Hart &hart, const Instruction &instr);
void exec_FSGNJN_Q   (Hart &hart, const Instruction &instr);
void exec_FSGNJX_Q   (Hart &hart, const Instruction &instr);
void exec_FMIN_Q     (Hart &hart, const Instruction &instr);
void exec_FMAX_Q     (Hart &hart, const Instruction &instr);
void exec_FCVT_S_Q   (Hart &hart, const Instruction &instr);
void exec_FCVT_Q_S   (Hart &hart, const Instruction &instr);
void exec_FCVT_D_Q   (Hart &hart, const Instruction &instr);
void exec_FCVT_Q_D   (Hart &hart, const Instruction &instr);
void exec_FSQRT_Q    (Hart &hart, const Instruction &instr);
void exec_FLE_S      (Hart &hart, const Instruction &instr);
void exec_FLT_S      (Hart &hart, const Instruction &instr);
void exec_FEQ_S      (Hart &hart, const Instruction &instr);
void exec_FLE_D      (Hart &hart, const Instruction &instr);
void exec_FLT_D      (Hart &hart, const Instruction &instr);
void exec_FEQ_D      (Hart &hart, const Instruction &instr);
void exec_FLE_Q      (Hart &hart, const Instruction &instr);
void exec_FLT_Q      (Hart &hart, const Instruction &instr);
void exec_FEQ_Q      (Hart &hart, const Instruction &instr);
void exec_FCVT_W_S   (Hart &hart, const Instruction &instr);
void exec_FCVT_WU_S  (Hart &hart, const Instruction &instr);
void exec_FCVT_L_S   (Hart &hart, const Instruction &instr);
void exec_FCVT_LU_S  (Hart &hart, const Instruction &instr);
void exec_FMV_X_W    (Hart &hart, const Instruction &instr);
void exec_FCLASS_S   (Hart &hart, const Instruction &instr);
void exec_FCVT_W_D   (Hart &hart, const Instruction &instr);
void exec_FCVT_WU_D  (Hart &hart, const Instruction &instr);
void exec_FCVT_L_D   (Hart &hart, const Instruction &instr);
void exec_FCVT_LU_D  (Hart &hart, const Instruction &instr);
void exec_FMV_X_D    (Hart &hart, const Instruction &instr);
void exec_FCLASS_D   (Hart &hart, const Instruction &instr);
void exec_FCVT_W_Q   (Hart &hart, const Instruction &instr);
void exec_FCVT_WU_Q  (Hart &hart, const Instruction &instr);
void exec_FCVT_L_Q   (Hart &hart, const Instruction &instr);
void exec_FCVT_LU_Q  (Hart &hart, const Instruction &instr);
void exec_FMV_X_Q    (Hart &hart, const Instruction &instr);
void exec_FCLASS_Q   (Hart &hart, const Instruction &instr);
void exec_FCVT_S_W   (Hart &hart, const Instruction &instr);
void exec_FCVT_S_WU  (Hart &hart, const Instruction &instr);
void exec_FCVT_S_L   (Hart &hart, const Instruction &instr);
void exec_FCVT_S_LU  (Hart &hart, const Instruction &instr);
void exec_FMV_W_X    (Hart &hart, const Instruction &instr);
void exec_FCVT_D_W   (Hart &hart, const Instruction &instr);
void exec_FCVT_D_WU  (Hart &hart, const Instruction &instr);
void exec_FCVT_D_L   (Hart &hart, const Instruction &instr);
void exec_FCVT_D_LU  (Hart &hart, const Instruction &instr);
void exec_FMV_D_X    (Hart &hart, const Instruction &instr);
void exec_FCVT_Q_W   (Hart &hart, const Instruction &instr);
void exec_FCVT_Q_WU  (Hart &hart, const Instruction &instr);
void exec_FCVT_Q_L   (Hart &hart, const Instruction &instr);
void exec_FCVT_Q_LU  (Hart &hart, const Instruction &instr);
void exec_FMV_Q_X    (Hart &hart, const Instruction &instr);
void exec_FLW        (Hart &hart, const Instruction &instr);
void exec_FLD        (Hart &hart, const Instruction &instr);
void exec_FLQ        (Hart &hart, const Instruction &instr);
void exec_FSW        (Hart &hart, const Instruction &instr);
void exec_FSD        (Hart &hart, const Instruction &instr);
void exec_FSQ        (Hart &hart, const Instruction &instr);
void exec_FMADD_S    (Hart &hart, const Instruction &instr);
void exec_FMSUB_S    (Hart &hart, const Instruction &instr);
void exec_FNMSUB_S   (Hart &hart, const Instruction &instr);
void exec_FNMADD_S   (Hart &hart, const Instruction &instr);
void exec_FMADD_D    (Hart &hart, const Instruction &instr);
void exec_FMSUB_D    (Hart &hart, const Instruction &instr);
void exec_FNMSUB_D   (Hart &hart, const Instruction &instr);
void exec_FNMADD_D   (Hart &hart, const Instruction &instr);
void exec_FMADD_Q    (Hart &hart, const Instruction &instr);
void exec_FMSUB_Q    (Hart &hart, const Instruction &instr);
void exec_FNMSUB_Q   (Hart &hart, const Instruction &instr);
void exec_FNMADD_Q   (Hart &hart, const Instruction &instr);

} // namespace rvsim

#endif // SIMULATOR_INSTRUCTION_EXEC_INSTRUCTION_EXEC_H
